{
  "openapi": "3.0.1",
  "info": {
    "title": "Business Operations Dashboard API",
    "version": "v1"
  },
  "paths": {
    "/api/Appointment/create": {
      "post": {
        "tags": [
          "Appointment"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Appointment"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Appointment"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Appointment"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Auth/login": {
      "get": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "provider",
            "in": "query",
            "schema": {
              "type": "string",
              "default": "Google"
            }
          },
          {
            "name": "returnUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Auth/google-callback": {
      "get": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "returnUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remoteError",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Auth/external-login-callback": {
      "get": {
        "tags": [
          "Auth"
        ],
        "parameters": [
          {
            "name": "returnUrl",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "remoteError",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Auth/profile": {
      "get": {
        "tags": [
          "Auth"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Task": {
      "get": {
        "tags": [
          "Task"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/api/Task/admin": {
      "get": {
        "tags": [
          "Task"
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ApplicationRole": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "normalizedName": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "userRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationUserRole"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ApplicationUser": {
        "required": [
          "firstName"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "normalizedUserName": {
            "type": "string",
            "nullable": true
          },
          "email": {
            "type": "string",
            "nullable": true
          },
          "normalizedEmail": {
            "type": "string",
            "nullable": true
          },
          "emailConfirmed": {
            "type": "boolean"
          },
          "passwordHash": {
            "type": "string",
            "nullable": true
          },
          "securityStamp": {
            "type": "string",
            "nullable": true
          },
          "concurrencyStamp": {
            "type": "string",
            "nullable": true
          },
          "phoneNumber": {
            "type": "string",
            "nullable": true
          },
          "phoneNumberConfirmed": {
            "type": "boolean"
          },
          "twoFactorEnabled": {
            "type": "boolean"
          },
          "lockoutEnd": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lockoutEnabled": {
            "type": "boolean"
          },
          "accessFailedCount": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string"
          },
          "lastName": {
            "maxLength": 50,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "userRoles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationUserRole"
            },
            "nullable": true
          },
          "isEmployee": {
            "type": "boolean"
          },
          "positionTitle": {
            "maxLength": 100,
            "minLength": 0,
            "type": "string",
            "nullable": true
          },
          "applicationUserServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationUserService"
            },
            "nullable": true
          },
          "appointmentsAsEmployee": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Appointment"
            },
            "nullable": true
          },
          "appointmentsAsCustomer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Appointment"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "additionalProperties": false
      },
      "ApplicationUserRole": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "roleId": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/ApplicationUser"
          },
          "role": {
            "$ref": "#/components/schemas/ApplicationRole"
          }
        },
        "additionalProperties": false
      },
      "ApplicationUserService": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "nullable": true
          },
          "user": {
            "$ref": "#/components/schemas/ApplicationUser"
          },
          "serviceId": {
            "type": "string",
            "format": "uuid"
          },
          "service": {
            "$ref": "#/components/schemas/Service"
          }
        },
        "additionalProperties": false
      },
      "Appointment": {
        "required": [
          "customer",
          "employee",
          "service"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "startTime": {
            "type": "string",
            "format": "date-time"
          },
          "endTime": {
            "type": "string",
            "format": "date-time"
          },
          "serviceId": {
            "type": "string",
            "format": "uuid"
          },
          "service": {
            "$ref": "#/components/schemas/Service"
          },
          "employeeId": {
            "type": "string",
            "nullable": true
          },
          "employee": {
            "$ref": "#/components/schemas/ApplicationUser"
          },
          "customerId": {
            "type": "string",
            "nullable": true
          },
          "customer": {
            "$ref": "#/components/schemas/ApplicationUser"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notes": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "$ref": "#/components/schemas/AppointmentStatus"
          }
        },
        "additionalProperties": false
      },
      "AppointmentStatus": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Business": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string"
          },
          "address": {
            "maxLength": 150,
            "minLength": 1,
            "type": "string",
            "nullable": true
          },
          "employees": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationUser"
            },
            "nullable": true
          },
          "services": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Service"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Service": {
        "required": [
          "description",
          "name"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "maxLength": 100,
            "minLength": 1,
            "type": "string"
          },
          "description": {
            "maxLength": 500,
            "minLength": 1,
            "type": "string"
          },
          "price": {
            "minimum": 0,
            "type": "number",
            "format": "double"
          },
          "durationInMinutes": {
            "maximum": 2147483647,
            "minimum": 1,
            "type": "integer",
            "format": "int32"
          },
          "businessId": {
            "type": "string",
            "format": "uuid"
          },
          "business": {
            "$ref": "#/components/schemas/Business"
          },
          "applicationUserServices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApplicationUserService"
            },
            "nullable": true
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    },
    "securitySchemes": {
      "Bearer": {
        "type": "apiKey",
        "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "Bearer": [ ]
    }
  ]
}